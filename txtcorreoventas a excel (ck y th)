import pandas as pd
import re

# Rutas de archivos
file_path = r'C:\Users\Jaime Valderrama\OneDrive - American Sportswear, S.A\Documentos\Jaime\Testing\Nueva carpeta\Origen\TEXT\TH\ventath2303.txt'
output_path = r'C:\Users\Jaime Valderrama\OneDrive - American Sportswear, S.A\Documentos\Jaime\Testing\Nueva carpeta\Resultado\TH\ventas_TH2303.xlsx'

# Leer archivo
with open(file_path, 'r', encoding='utf-8') as file:
    lines = file.readlines()

data = []
current_store = None
headers = []
row_pattern = re.compile(r'^(\d{2}|T\. Acum)\s')

def limpiar_numero(valor):
    try:
        if isinstance(valor, str):
            valor = valor.strip()
            valor = valor.replace("−", "-").replace(" ", "")
            if valor.count(",") >= 2 and "." not in valor:
                valor = valor.replace(",", "")
            else:
                valor = valor.replace(".", "").replace(",", ".")
        if valor == "":
            return None
        return float(valor)
    except:
        return None

# Procesar líneas
for line in lines:
    line = line.strip()
    if not line:
        continue
    if not row_pattern.match(line) and not line.startswith("DIA"):
        current_store = line
        continue
    if line.startswith("DIA"):
        raw_headers = line.split("\t")
        headers = []
        counter = {}
        for h in raw_headers:
            if h in counter:
                counter[h] += 1
                h_new = f"{h}_{counter[h]}"
            else:
                counter[h] = 1
                h_new = h
            headers.append(h_new)
        headers.append("Tienda")
        continue
    if row_pattern.match(line):
        row_data = line.split("\t")
        if len(row_data) < len(headers) - 1:
            row_data.extend([""] * (len(headers) - 1 - len(row_data)))
        row_data.append(current_store)
        data.append(row_data)

# Crear DataFrame
df = pd.DataFrame(data, columns=headers)
df["Tienda"] = df["Tienda"].ffill()

# Renombrar columnas duplicadas
df = df.rename(columns={
    "VAR%": "VAR%_VENTA",
    "VAR%_2": "VAR%_UNID",
    "VAR%_3": "VAR%_PROFIT"
})

# Limpieza general
columnas_texto = ["DIA", "Tienda"]
columnas_numericas = [col for col in df.columns if col not in columnas_texto]

for col in columnas_numericas:
    df[col] = df[col].apply(limpiar_numero)

# Procesar porcentajes como decimales reales (ej: 62 → 0.62)
columnas_porcentuales = [
    "VAR%_VENTA", "VAR%_UNID", "VAR%_PROFIT",
    "MG_24", "MG_25", "CONVERSION", "UNID_X_BOL"
]
# Ajustar MG_24 para multiplicar por 10 y mostrar como porcentaje correcto
if "MG_24" in df.columns:
    df["MG_24"] = df["MG_24"].apply(lambda x: round(x * 10, 2) if pd.notnull(x) else None)

for col in columnas_porcentuales:
    if col in df.columns:
        df[col] = df[col].apply(lambda x: round(x / 100, 4) if pd.notnull(x) and abs(x) > 1 else round(x, 4))

# Procesar UNID_X_BOL bien
if "UNID_X_BOL" in df.columns:
    df["UNID_X_BOL"] = df["UNID_X_BOL"].apply(limpiar_numero).round(2)

# Exportar limpio a Excel
df.to_excel(output_path, index=False, engine='xlsxwriter')
print(f"✅ Archivo guardado correctamente en:\n{output_path}")
