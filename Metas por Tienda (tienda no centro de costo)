import pandas as pd
import calendar

# === CONFIGURACIÓN GENERAL ===
anio = 2025
mes = 4  # Abril
dias_en_mes = calendar.monthrange(anio, mes)[1]

# Ruta al archivo Excel de entrada y salida
file_path = r'C:\Users\Jaime Valderrama\OneDrive - American Sportswear, S.A\Documentos\Jaime\Testing\Nueva carpeta\Metas\metadiaADF_Abril.xlsx'
output_file_path = r'C:\Users\Jaime Valderrama\OneDrive - American Sportswear, S.A\Documentos\Jaime\Testing\Nueva carpeta\Metas\Resultado\MetaAbril.xlsx'

# === PROPORCIONES ORIGINALES (ajustadas a cantidad real de días) ===
proporciones_originales = [
    0.03, 0.03, 0.03, 0.03, 0.06, 0.05, 0.02, 0.02, 0.02, 0.03,
    0.03, 0.05, 0.05, 0.03, 0.02, 0.02, 0.03, 0.03, 0.05, 0.04,
    0.02, 0.02, 0.02, 0.03, 0.04, 0.05, 0.05, 0.03, 0.02, 0.02, 0.00
][:dias_en_mes]  # Ajustado al número real de días del mes

# === TIENDAS CERRADAS ===
tiendas_cerradas = {
    'COSTANERA CENTER': [14, 21]  # Días reales de cierre
    # Puedes agregar más tiendas: 'TIENDA X': [5, 10, 15]
}

# === CARGA DE DATOS ===
df = pd.read_excel(file_path)
data = []

# === PROCESAMIENTO DE METAS ===
for _, row in df.iterrows():
    meta_mensual = row['Meta Mensual']
    tienda = row['Tienda']
    
    proporciones = proporciones_originales.copy()
    
    if tienda in tiendas_cerradas:
        dias_cerrados = tiendas_cerradas[tienda]
        for dia in dias_cerrados:
            if 1 <= dia <= dias_en_mes:
                proporciones[dia - 1] = 0  # Día a índice

        proporciones_restantes = [p for p in proporciones if p > 0]
        total_proporciones_restantes = sum(proporciones_restantes)
        proporciones = [p / total_proporciones_restantes if p > 0 else 0 for p in proporciones]

    # Cálculo de metas diarias
    metas_diarias = [meta_mensual * p for p in proporciones]
    
    # Ajuste final para que la suma sea exacta
    diferencia = meta_mensual - sum(metas_diarias)
    metas_diarias[-1] += diferencia

    # Construcción de resultados
    for i in range(dias_en_mes):
        fecha = pd.Timestamp(anio, mes, i + 1)  # Fecha en formato datetime para Excel
        data.append([
            row['Company'],
            fecha,
            row['Almacen'],
            row['Tienda'],
            metas_diarias[i]
        ])

# === CREACIÓN Y GUARDADO DE RESULTADO ===
df_resultado = pd.DataFrame(data, columns=['Company', 'Fecha', 'Almacen', 'Tienda', 'Meta diaria'])
df_resultado.to_excel(output_file_path, index=False)

print(f"✅ Archivo guardado correctamente en: {output_file_path}")
